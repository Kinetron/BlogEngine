// <auto-generated />
using System;
using GearShop.Services.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlogEngine.Migrations
{
    [DbContext(typeof(GearShopDbContext))]
    [Migration("20240110084255_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GearShop.Models.Entities.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleImage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chapters", t =>
                        {
                            t.HasTrigger("tr_Chapters_LogIns");

                            t.HasTrigger("tr_Chapters_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.InfoSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InfoSource", t =>
                        {
                            t.HasTrigger("tr_InfoSource_LogIns");

                            t.HasTrigger("tr_InfoSource_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.NonRegisteredBuyer", b =>
                {
                    b.Property<long>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ClusterId"));

                    b.Property<Guid?>("BuyerGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClusterId");

                    b.ToTable("NonRegisteredBuyers", t =>
                        {
                            t.HasTrigger("tr_NonRegisteredBuyers_LogIns");

                            t.HasTrigger("tr_NonRegisteredBuyers_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<long>("NonRegisteredBuyerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders", t =>
                        {
                            t.HasTrigger("tr_Orders_LogIns");

                            t.HasTrigger("tr_Orders_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.OrderInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BuyerEmail")
                        .HasColumnType("text");

                    b.Property<byte[]>("BuyerInfo")
                        .HasColumnType("bytea");

                    b.Property<string>("BuyerName")
                        .HasColumnType("text");

                    b.Property<string>("BuyerPhone")
                        .HasColumnType("text");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OrderInfo");
                });

            modelBuilder.Entity("GearShop.Models.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems", t =>
                        {
                            t.HasTrigger("tr_OrderItems_LogIns");

                            t.HasTrigger("tr_OrderItems_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TitleImage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pages", t =>
                        {
                            t.HasTrigger("tr_Pages_LogIns");

                            t.HasTrigger("tr_Pages_LogUpd");
                        });
                });

            modelBuilder.Entity("GearShop.Models.Entities.PriceSynchronizeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BeginOperation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Current")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentOperation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndOperation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorText")
                        .HasColumnType("text");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PriceSynchronizeStatus");
                });

            modelBuilder.Entity("GearShop.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Available")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Changer")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Creator")
                        .HasColumnType("text");

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<string>("ImageName")
                        .HasColumnType("text");

                    b.Property<int>("InfoSourceId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PurchaseCost")
                        .HasColumnType("numeric");

                    b.Property<int?>("Rest")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RetailCost")
                        .HasColumnType("numeric");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<int>("SynchronizationRuleId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("WholesaleCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GearShop.Models.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("GearShop.Models.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("GearShop.Models.Entities.SlaiderMainPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SlaiderMainPage");
                });

            modelBuilder.Entity("GearShop.Models.Entities.SynchronizationRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SynchronizationRules");
                });

            modelBuilder.Entity("GearShop.Models.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Deleted")
                        .HasColumnType("integer");

                    b.Property<string>("HashSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GearShop.Models.Entities.OrderItem", b =>
                {
                    b.HasOne("GearShop.Models.Entities.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GearShop.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
